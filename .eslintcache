[{"E:\\react\\Chat_Room\\src\\index.js":"1","E:\\react\\Chat_Room\\src\\reportWebVitals.js":"2","E:\\react\\Chat_Room\\src\\App.js":"3","E:\\react\\Chat_Room\\src\\componenets\\join\\Join.js":"4","E:\\react\\Chat_Room\\src\\componenets\\Chat\\Chat.js":"5","E:\\react\\Chat_Room\\src\\componenets\\Chat\\Drawer.js":"6","E:\\react\\Chat_Room\\src\\config\\Config.js":"7","E:\\react\\Chat_Room\\src\\componenets\\Loader.js":"8","E:\\react\\Chat_Room\\src\\componenets\\Chat\\MessageContainer.js":"9","E:\\react\\Chat_Room\\src\\Test.js":"10"},{"size":476,"mtime":1610524039822,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609662719999,"results":"13","hashOfConfig":"12"},{"size":909,"mtime":1610480086992,"results":"14","hashOfConfig":"12"},{"size":1366,"mtime":1610526033546,"results":"15","hashOfConfig":"12"},{"size":9203,"mtime":1610526714150,"results":"16","hashOfConfig":"12"},{"size":11030,"mtime":1610524042998,"results":"17","hashOfConfig":"12"},{"size":562,"mtime":1610393031465,"results":"18","hashOfConfig":"12"},{"size":2314,"mtime":1610477624332,"results":"19","hashOfConfig":"12"},{"size":2574,"mtime":1610526714263,"results":"20","hashOfConfig":"12"},{"size":1773,"mtime":1610523225654,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1d3f8lo",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react\\Chat_Room\\src\\index.js",["44"],"E:\\react\\Chat_Room\\src\\reportWebVitals.js",[],["45","46"],"E:\\react\\Chat_Room\\src\\App.js",[],"E:\\react\\Chat_Room\\src\\componenets\\join\\Join.js",[],"E:\\react\\Chat_Room\\src\\componenets\\Chat\\Chat.js",["47","48"],"E:\\react\\Chat_Room\\src\\componenets\\Chat\\Drawer.js",["49","50"],"E:\\react\\Chat_Room\\src\\config\\Config.js",[],"E:\\react\\Chat_Room\\src\\componenets\\Loader.js",[],"E:\\react\\Chat_Room\\src\\componenets\\Chat\\MessageContainer.js",["51"],"import React from \"react\";\r\n\r\n\r\nfunction MessageContainer({name, message, type, mine, time}) {\r\n    let a = {name, message, type, mine, time}\r\n    console.log(a);\r\n\r\n    function Message() {\r\n\r\n\r\n        if (type === 'text') {\r\n            return (\r\n                <p\r\n                    className={`chat_message  ${mine && \"chat_receiver\"}`}>\r\n                            <span\r\n                                className=\"chat_name\">{name} </span>\r\n                    <span className='message'> {message}</span>\r\n                    <span\r\n                        className=\"chat_timestamp\">{time}</span>\r\n                </p>\r\n            )\r\n        } else if (type === 'image') {\r\n            return (\r\n                <p\r\n                    className={`chat_message  ${mine && \"chat_receiver\"}`}>\r\n                            <span\r\n                                className=\"chat_name\">{name} </span>\r\n                    <img className='message_image' src={message}\r\n                         alt={'IMAGE'}/>\r\n                    <span\r\n                        className=\"chat_timestamp\">{time}</span>\r\n                    <span className='send_message_status'>\r\n                            </span>\r\n                </p>\r\n            )\r\n        } else if (type === 'audio') {\r\n            return (\r\n                <p\r\n                    className={`chat_message  ${mine && \"chat_receiver\"}`}>\r\n                            <span\r\n                                className=\"chat_name\">{name} </span>\r\n                    <audio controls>\r\n                        <source src={message}/>\r\n                    </audio>\r\n                    <span\r\n                        className=\"chat_timestamp\">{time}</span>\r\n                    <span className='send_message_status'>\r\n                            </span>\r\n                </p>\r\n            )\r\n        } else if (type === \"video\") {\r\n            return (\r\n                <p\r\n                    className={`chat_message  ${mine && \"chat_receiver\"}`}>\r\n                            <span\r\n                                className=\"chat_name\">{name} </span>\r\n                    <video className='message_video' controls>\r\n                        <source src={message} type=\"video/mp4\"/>\r\n                    </video>\r\n\r\n                    <span\r\n                        className=\"chat_timestamp\">{time}</span>\r\n                    <span className='send_message_status'>\r\n                            </span>\r\n                </p>\r\n            )\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            {Message()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MessageContainer\r\n","E:\\react\\Chat_Room\\src\\Test.js",[],{"ruleId":"52","severity":1,"message":"53","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":12},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"52","severity":1,"message":"60","line":6,"column":9,"nodeType":"54","messageId":"55","endLine":6,"endColumn":17},{"ruleId":"61","severity":1,"message":"62","line":68,"column":13,"nodeType":"63","messageId":"64","endLine":74,"endColumn":14},{"ruleId":"52","severity":1,"message":"65","line":1,"column":15,"nodeType":"54","messageId":"55","endLine":1,"endColumn":21},{"ruleId":"52","severity":1,"message":"66","line":1,"column":22,"nodeType":"54","messageId":"55","endLine":1,"endColumn":31},{"ruleId":"67","severity":1,"message":"68","line":28,"column":21,"nodeType":"69","endLine":29,"endColumn":41},"no-unused-vars","'Test' is defined but never used.","Identifier","unusedVar","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"'Recorder' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useRef' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]